You are given two integer arrays nums1 and nums2 both of unique elements, where nums1 is a subset of nums2.

Find all the next greater numbers for nums1's elements in the corresponding places of nums2.

The Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. If it does not exist, return -1 for this number.

 

Example 1:

Input: nums1 = [4,1,2], nums2 = [1,3,4,2]
Output: [-1,3,-1]
Explanation:
For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.
For number 1 in the first array, the next greater number for it in the second array is 3.
For number 2 in the first array, there is no next greater number for it in the second array, so output -1.
Example 2:

Input: nums1 = [2,4], nums2 = [1,2,3,4]
Output: [3,-1]
Explanation:
For number 2 in the first array, the next greater number for it in the second array is 3.
For number 4 in the first array, there is no next greater number for it in the second array, so output -1.
 

Constraints:

1 <= nums1.length <= nums2.length <= 1000
0 <= nums1[i], nums2[i] <= 104
All integers in nums1 and nums2 are unique.
All the integers of nums1 also appear in nums2.
 

Follow up: Could you find an O(nums1.length + nums2.length) solution?
Solution:
class Solution:
    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:
        '''
        res = []
        for i in nums1:
            if i in nums2:
                x = nums2.index(i)
                if x==len(nums2)-1 or i==max(nums2) or i>=max(nums2[x:]):
                    res.append(-1)
                else:
                    for k in range(len(nums2[x:])):
                        if i<k:
                            res.append(k)
        return res
        elif i<(nums2[x+1]):
            res.append((nums2[x+1]))
        else:
            res.append(max(nums2[x:]))
        
    #https://leetcode.com/problems/next-greater-element-i/discuss/799837/Python3-Implementation
    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:
        stack = []
        d = dict()
        for i in nums2 : 
            while(stack and i > stack[-1]):
                element = stack.pop()
                d[element] = i 
            stack.append(i)
        return [d.get(j, -1) for j in nums1]
    '''
    def nextGreaterElement(self, findNums, nums):
        st, d = [], {}
        for n in nums:
            while st and st[-1] < n:
                d[st.pop()] = n
            st.append(n)
        return [d.get(x, -1) for x in findNums]

class Solution:
    def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:
        ans=[]
        for i in range(len(nums1)):
            index=nums2.index(nums1[i])
            for j in range(index,len(nums2)):
                if nums1[i]<nums2[j]:
                    ans.append(nums2[j])
                    break
            else:
                ans.append(-1)
        return ans    