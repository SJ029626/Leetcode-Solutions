We are given two strings, A and B.

A shift on A consists of taking string A and moving the leftmost character to the rightmost position. For example, if A = 'abcde', then it will be 'bcdea' after one shift on A. Return True if and only if A can become B after some number of shifts on A.

Example 1:
Input: A = 'abcde', B = 'cdeab'
Output: true

Example 2:
Input: A = 'abcde', B = 'abced'
Output: false
Note:

A and B will have length at most 100.

Solution:
class Solution:
    def rotateString(self, A: str, B: str) -> bool:
        i = 1
        if A==B:
            return True
        while i<len(A):
            str1 = list(A)[i:]
            str2 = list(A)[:i]
            str3 = "".join(str1+str2)
            if str3==B:
                return True
            i=i+1
        return False