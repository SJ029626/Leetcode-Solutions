Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.

A string is represented by an array if the array elements concatenated in order forms the string.

 

Example 1:

Input: word1 = ["ab", "c"], word2 = ["a", "bc"]
Output: true
Explanation:
word1 represents string "ab" + "c" -> "abc"
word2 represents string "a" + "bc" -> "abc"
The strings are the same, so return true.
Example 2:

Input: word1 = ["a", "cb"], word2 = ["ab", "c"]
Output: false
Example 3:

Input: word1  = ["abc", "d", "defg"], word2 = ["abcddefg"]
Output: true
 

Constraints:

1 <= word1.length, word2.length <= 103
1 <= word1[i].length, word2[i].length <= 103
1 <= sum(word1[i].length), sum(word2[i].length) <= 103
word1[i] and word2[i] consist of lowercase letters.

Solution:

class Solution:
    def arrayStringsAreEqual(self, word1: List[str], word2: List[str]) -> bool:
        s1 = "".join(word1)
        s2 = "".join(word2)
        return s1==s2
        '''
        value = 0
        if (len(s1)!=len(s2)):  # Handling Special Case
            return False
        l1 = [i for i in s1]
        l2 = [i for i in s2]
        #for i,j in zip(l1,l2):
        #    if i==j:
        #        print(i, j)
        #        value=1
        #    else:
        #        value=0
        if len(s1)==len(s2):
            for i,j in zip(s1,s2):
                if i==j:
                    value = 1
                else:
                    value=0
        if value == 1:
            return True
        return False
        '''