Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
Example 4:

Input: x = 0
Output: 0
 

Constraints:

-231 <= x <= 231 - 1

Solution:
class Solution:
    def reverse(self, x: int) -> int:
        '''
        v = [i for i in str(x)]
        if '-' in v:
            return "-"+"".join((reversed(v[1:])))
        else:
            return "".join((reversed(v)))
        '''
        v = 0
        if x<0:
            v = [i for i in str(x)]
            x = int("".join(v[1:]))
        rev = 0
        while x>0:
            d = x%10
            rev = rev*10+d
            x = x//10
        if v:
            if -rev<=-2147483648:
                return 0
            else:
                return -rev
        else:
            if rev>=2147483647 or x>=2147483647:
                return 0
            else:
                return rev