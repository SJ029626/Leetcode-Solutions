Given a string s, find the length of the longest substring without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
Example 4:

Input: s = ""
Output: 0

solution:
class Solution:
    #https://leetcode.com/problems/longest-substring-without-repeating-characters/discuss/236649/Python-solution
    def lengthOfLongestSubstring(self, s: str) -> int:
        if len(s) == 0 :
            return 0
        
        curr_str = ""
        max_length = 0
        for letter in s:
            if letter in curr_str:
                if len(curr_str) > max_length:
                    max_length = len(curr_str)

                new_start = curr_str.find(letter) + 1
                curr_str = curr_str[new_start:]
            curr_str += letter
        
        if len(curr_str) > max_length:
            max_length = len(curr_str)

        return max_length
        '''
        count = 0
        a = []
        k = {}
        v = ''
        for i in range(len(s)):
            if s[i] not in a:
                a.append(s[i])
                count+=1
                k.update({count: a})
            elif s[i] in a:
                a.remove(s[i])
                count = 0
        print(k)
        if len(s)==0:
            return 0
        elif s == " ":
            return 1
        elif len(s)==1:
            return 1
        else:
            for i in (k.keys()):
                return len(k[i])
        
        for i in range(len(s)-1):
            if s[i]!=s[i+1] and s[i] not in a:
                count+=1
                v+=s[i]
                a.append(s[i])
                print(a)
            elif s[i] in a:
                k[count] = v
                count = 0
                v = ''
                a = []
                a.append([s[i]])
                print(k)
        #print(k)
        
        if len(s)==0:
            return 0
        for i in range(len(s)-1):
            if (s[i]!=s[i+1]) and (s[i] not in a):
                a.append(s[i])
                count+=1
                k[count] = a
            elif s[i]==s[i+1] or s[i] in a:
                k[count] = a
                a = []
                count = 0
        if len(k)!=0:
            for i in sorted(k.keys(), reverse=True):
                return i
        else:
            return 1
        '''