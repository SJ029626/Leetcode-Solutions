Given two stings ransomNote and magazine, return true if ransomNote can be constructed from magazine and false otherwise.

Each letter in magazine can only be used once in ransomNote.

 

Example 1:

Input: ransomNote = "a", magazine = "b"
Output: false
Example 2:

Input: ransomNote = "aa", magazine = "ab"
Output: false
Example 3:

Input: ransomNote = "aa", magazine = "aab"
Output: true
 

Constraints:

1 <= ransomNote.length, magazine.length <= 105
ransomNote and magazine consist of lowercase English letters.

class Solution:
    def canConstruct(self, r: str, m: str) -> bool:
        x1 = Counter(r)
        x2 = Counter(m)
        count = 0
        for i in x1.keys():
            if i in x2.keys() and x2.get(i)>=x1.get(i):
                count+=1
        if count==len(list(set(r))):
            return True
        else:
            return False
        '''
        Another Solution:
        return not collections.Counter(ransomNote) - collections.Counter(magazine)
        Another Solution
        for i in set(ransomNote):
            if ransomNote.count(i) > magazine.count(i):
                return False
        return True
        '''